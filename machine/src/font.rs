//! A font that describes 8x8 bit ascii characters
//!
//! The arrays of bytes are descriptions of how to print a letter on screen
//! Each byte in an array gives the pixel configurations for printing a row of the
//! character on an 8x8 buffer

use core::ops::Index;

/// All zeros, meaning print nothing
const EMPTY: [u8; 8] = [0x00; 8];

/// ```text
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░░░░░░ - 00000000
/// ░░░██░░░ - 00011000
/// ░░░░░░░░ - 00000000
/// ```
pub const EXCLAMATION_MARK: [u8; 8] = [0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x18, 0x00];

/// ```text
/// ░░██░██░ - 00110110
/// ░░██░██░ - 00110110
/// ░██░██░░ - 01101100
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ```
pub const QUOTATION_MARK: [u8; 8] = [0x36, 0x36, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00];

/// ```text
/// ░░██░██░ - 00110110
/// ░░██░██░ - 00110110
/// ░███████ - 01111111
/// ░░██░██░ - 00110110
/// ░███████ - 01111111
/// ░░██░██░ - 00110110
/// ░░██░██░ - 00110110
/// ░░░░░░░░ - 00000000
/// ```
pub const HASH_SIGN: [u8; 8] = [0x36, 0x36, 0x7f, 0x36, 0x7f, 0x36, 0x36, 0x00];

/// ```text
/// ░░░░█░░░ - 00001000
/// ░░████░░ - 00111100
/// ░██░░░█░ - 01100010
/// ░░███░░░ - 00111000
/// ░░░███░░ - 00011100
/// ░█░░░██░ - 01000110
/// ░░████░░ - 00111100
/// ░░░█░░░░ - 00010000
/// ```
pub const DOLLAR_SIGN: [u8; 8] = [0x08, 0x3c, 0x62, 0x38, 0x1c, 0x46, 0x3c, 0x10];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░██░░██ - 00110011
/// ░░██░██░ - 00110110
/// ░░░░██░░ - 00001100
/// ░░░██░░░ - 00011000
/// ░░██░██░ - 00110110
/// ░██░░██░ - 01100110
/// ░░░░░░░░ - 00000000
/// ```
pub const PERCENT_SIGN: [u8; 8] = [0x00, 0b00110011, 0b00110110, 0b00001100, 0b00011000, 0b00110110, 0b01100110, 0x00];

/// ```text
/// ░░███░░░ - 00111000
/// ░██░██░░ - 01101100
/// ░░███░░░ - 00111000
/// ░███░██░ - 01110110
/// ██░███░░ - 11011100
/// ██░░██░░ - 11001100
/// ░███░██░ - 01110110
/// ░░░░░░░░ - 00000000
/// ```
pub const AMPERSAND: [u8; 8] = [0b00111000, 0b01101100, 0b00111000, 0b01110110, 0b11011100, 0b11001100, 0b01110110, 0x00];

/// ```text
/// ░░░░██░░ - 00001100
/// ░░░░██░░ - 00001100
/// ░░░██░░░ - 00011000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ```
pub const APOSTROPHE: [u8; 8] = [0b00001100, 0b00001100, 0b00011000, 0x00, 0x00, 0x00, 0x00, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░░██░░░ - 00011000
/// ░░██░░░░ - 00110000
/// ░░██░░░░ - 00110000
/// ░░██░░░░ - 00110000
/// ░░██░░░░ - 00110000
/// ░░░██░░░ - 00011000
/// ░░░░░░░░ - 00000000
/// ```
pub const OPEN_PARENTHESES: [u8; 8] = [0x00, 0b00011000, 0b00110000, 0b00110000, 0b00110000, 0b00110000, 0b00011000, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░░██░░░ - 00011000
/// ░░░░██░░ - 00001100
/// ░░░░██░░ - 00001100
/// ░░░░██░░ - 00001100
/// ░░░░██░░ - 00001100
/// ░░░██░░░ - 00011000
/// ░░░░░░░░ - 00000000
/// ```
pub const CLOSE_PARENTHESES: [u8; 8] = [0x00, 0b00011000, 0b00001100, 0b00001100, 0b00001100, 0b00001100, 0b00011000, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░░██░░░ - 00011000
/// ░█░██░█░ - 01011010
/// ░░████░░ - 00111100
/// ░██████░ - 01111110
/// ░░████░░ - 00111100
/// ░█░██░█░ - 01011010
/// ░░░░░░░░ - 00000000
/// ```
pub const ASTERISK: [u8; 8] = [0x00, 0b00011000, 0b01011010, 0b00111100, 0b01111110, 0b00111100, 0b01011010, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░█████░ - 01111110
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ```
pub const PLUS_SIGN: [u8; 8] = [0x00, 0b00011000, 0b00011000, 0b001111110, 0b00011000, 0b00011000, 0x00, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░██░░░░ - 00110000
/// ░░██░░░░ - 00110000
/// ░██░░░░░ - 01100000
/// ░░░░░░░░ - 00000000
/// ```
pub const COMMA: [u8; 8] = [0x00, 0x00, 0x00, 0x00, 0b00110000, 0b00110000, 0b01100000, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░████░░ - 00000000
/// ░░████░░ - 00110000
/// ░░░░░░░░ - 00110000
/// ░░░░░░░░ - 01100000
/// ░░░░░░░░ - 00000000
/// ```
pub const HYPHEN: [u8; 8] = [0x00, 0x00, 0x00, 0b00111100, 0b00111100, 0x00, 0x00, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░██░░░░ - 00110000
/// ░░██░░░░ - 00110000
/// ░░░░░░░░ - 00000000
/// ```
pub const DOT: [u8; 8] = [0x00, 0x00, 0x00, 0x00, 0x00, 0b00110000, 0b00110000, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░░░░██░ - 00000110
/// ░░░░██░░ - 00001100
/// ░░░██░░░ - 00011000
/// ░░██░░░░ - 00110000
/// ░██░░░░░ - 01100000
/// ██░░░░░░ - 11000000
/// ░░░░░░░░ - 00000000
/// ```
pub const SLASH: [u8; 8] = [0x00, 0b00000110, 0b00001100, 0b00011000, 0b00110000, 0b01100000, 0b11000000, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░████░░ - 00111100
/// ░█░░░░█░ - 01000010
/// ░█░░░██░ - 01000110
/// ░█░░█░█░ - 01001010
/// ░█░█░░█░ - 01010010
/// ░░████░░ - 00111100
/// ░░░░░░░░ - 00000000
/// ```
pub const ZERO: [u8; 8] = [0x00, 0b00111100, 0b01000010, 0b01000110, 0b01001010, 0b01010010, 0b00111100, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░░░██░░ - 00001100
/// ░░░███░░ - 00011100
/// ░░░░██░░ - 00001100
/// ░░░░██░░ - 00001100
/// ░░░░██░░ - 00001100
/// ░░░████░ - 00011110
/// ░░░░░░░░ - 00000000
/// ```
pub const ONE: [u8; 8] = [0x00, 0x0c, 0x1c, 0x0c, 0x0c, 0x0c, 0x1e, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░████░░ - 00111100
/// ░██░░██░ - 01100110
/// ░░░░██░░ - 00001100
/// ░░░██░░░ - 00011000
/// ░░██░░░░ - 00110000
/// ░██████░ - 01111110
/// ░░░░░░░░ - 00000000
/// ```
pub const TWO: [u8; 8] = [0x00, 0b00111100, 0b01100110, 0b00001100, 0b00011000, 0b00110000, 0b01111110, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░████░░ - 00111100
/// ░██░░██░ - 01100110
/// ░░░░██░░ - 00001100
/// ░░░██░░░ - 00011000
/// ░░░░██░░ - 00001100
/// ░██░░██░ - 01100110
/// ░░████░░ - 00111100
/// ```
pub const THREE: [u8; 8] = [0x00, 0b00111100, 0b01100110, 0b00001100, 0b00011000, 0b00001100, 0b01100110, 0b00111100];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░██░██░░ - 01101100
/// ░██░██░░ - 01101100
/// ░██░██░░ - 01101100
/// ░██████░ - 01111110
/// ░░░░██░░ - 00001100
/// ░░░░██░░ - 00001100
/// ░░░░░░░░ - 00000000
/// ```
pub const FOUR: [u8; 8] = [0x00, 0b01101100, 0b01101100, 0b01101100, 0b01111110, 0b00001100, 0b00001100, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░██████░ - 01111110
/// ░██░░░░░ - 01100000
/// ░█████░░ - 01111100
/// ░░░░░██░ - 00000110
/// ░██░░██░ - 01100110
/// ░░████░░ - 00111100
/// ░░░░░░░░ - 00000000
/// ```
pub const FIVE: [u8; 8] = [0x00, 0b01111110, 0b01100000, 0b01111100, 0b00000110, 0b01100110, 0b00111100, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░█████░ - 00111110
/// ░██░░░░░ - 01100000
/// ░█████░░ - 01111110
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░░████░░ - 01111110
/// ░░░░░░░░ - 00000000
/// ```
pub const SIX: [u8; 8] = [0x00, 0b00111110, 0b01100000, 0b01111110, 0b01100110, 0b01100110, 0b00111100, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░██████░ - 01111110
/// ░░░░░██░ - 00000110
/// ░░░░██░░ - 00001100
/// ░░░██░░░ - 00011000
/// ░░██░░░░ - 00110000
/// ░░██░░░░ - 00110000
/// ░░░░░░░░ - 00000000
/// ```
pub const SEVEN: [u8; 8] = [0x00, 0b01111110, 0b00000110, 0b00001100, 0b00011000, 0b00110000, 0b00110000, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░████░░ - 00111100
/// ░██░░██░ - 01100110
/// ░░░██░░░ - 00011000
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░░████░░ - 00111100
/// ░░░░░░░░ - 00000000
/// ```
pub const EIGHT: [u8; 8] = [0x00, 0b00111100, 0b01100110, 0b00011000, 0b01100110, 0b01100110, 0b00111100, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░████░░ - 00111100
/// ░██░░██░ - 01100110
/// ░░████░░ - 00111100
/// ░░░██░░░ - 00011000
/// ░░██░░░░ - 00110000
/// ░██░░░░░ - 01100000
/// ░░░░░░░░ - 00000000
/// ```
pub const NINE: [u8; 8] = [0x00, 0b00111100, 0b01100110, 0b00111100, 0b00011000, 0b00110000, 0b01100000, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00000000
/// ░░░░░░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ```
pub const COLON: [u8; 8] = [0x00, 0b00011000, 0b00011000, 0x00, 0b00011000, 0b00011000, 0x00, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░░░░░░ - 00000000
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░██░░░░ - 00110000
/// ```
pub const SEMI_COLON: [u8; 8] = [0x00, 0x00, 0b00011000, 0b00011000, 0x00, 0b00011000, 0b00011000, 0b00110000];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░░██░░░ - 00011000
/// ░░██░░░░ - 00110000
/// ░██░░░░░ - 01100000
/// ░██░░░░░ - 01100000
/// ░░██░░░░ - 00110000
/// ░░░██░░░ - 00011000
/// ░░░░░░░░ - 00000000
/// ```
pub const LESS_THAN: [u8; 8] = [0x00, 0b00011000, 0b00110000, 0b01100000, 0b01100000, 0b00110000, 0b00011000, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░████░░ - 00111100
/// ░░████░░ - 00111100
/// ░░░░░░░░ - 00000000
/// ░░████░░ - 00111100
/// ░░████░░ - 00111100
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ```
pub const EQUALS: [u8; 8] = [0x00, 0b00111100, 0b00111100, 0x00, 0b00111100, 0b00111100, 0x00, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░░██░░░ - 00011000
/// ░░░░██░░ - 00001100
/// ░░░░░██░ - 00000110
/// ░░░░░██░ - 00000110
/// ░░░░██░░ - 00001100
/// ░░░██░░░ - 00011000
/// ░░░░░░░░ - 00000000
/// ```
pub const GREATER_THAN: [u8; 8] = [0x00, 0b00011000, 0b00001100, 0b00000110, 0b00000110, 0b00001100, 0b00011000, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░████░░ - 00111100
/// ░██░░██░ - 01100110
/// ░░░░██░░ - 00001100
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░░░░░░ - 00000000
/// ░░░██░░░ - 00011000
/// ```
pub const QUESTION_MARK: [u8; 8] = [0x00, 0b00111100, 0b01100110, 0b00001100, 0b00011000, 0b00011000, 0x00, 0b00011000];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░██████░ - 01111110
/// ░██░░░█░ - 01100010
/// ░██░███░ - 01101110
/// ░██░███░ - 01101110
/// ░██░░░░░ - 01100000
/// ░░████░░ - 00111100
/// ░░░░░░░░ - 00000000
/// ```
pub const AT_SIGN: [u8; 8] = [0x00, 0b01111110, 0b01100010, 0b01101110, 0b01101110, 0b01100000, 0b00111100, 0x00];

/// ```text
/// ░░░██░░░ - 00011000
/// ░░████░░ - 00111100
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░██████░ - 01111110
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_A: [u8; 8] = [0x18, 0x3c, 0x66, 0x66, 0x77, 0x66, 0x66, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░█████░░ - 01111110
/// ░██░░██░ - 01100110
/// ░██████░ - 01111110
/// ░██░██░░ - 01101100
/// ░██░░██░ - 01100110
/// ░█████░░ - 01111100
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_B: [u8; 8] = [0x00, 0b01111110, 0b01100110, 0b01111110, 0b01101100, 0b01100110, 0b01111100, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░████░░ - 00111100
/// ░██░░██░ - 01100110
/// ░██░░░░░ - 01100000
/// ░██░░░░░ - 01100000
/// ░██░░██░ - 01100110
/// ░░████░░ - 00111100
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_C: [u8; 8] = [0x00, 0b00111100, 0b01100110, 0b01100000, 0b01100000, 0b01100110, 0b00111100, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░████░░░ - 01111000
/// ░██░██░░ - 01101100
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░██░██░░ - 01101100
/// ░████░░░ - 01111000
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_D: [u8; 8] = [0x00, 0b01111000, 0b01101100, 0b01100110, 0b01100110, 0b01101100, 0b01111000, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░██████░ - 01111110
/// ░██░░░░░ - 01100000
/// ░█████░░ - 01111100
/// ░█████░░ - 01111100
/// ░██░░░░░ - 01100000
/// ░██████░ - 01111110
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_E: [u8; 8] = [0x00, 0b01111110, 0b01100000, 0b01111100, 0b01111100, 0b01100000, 0b01111110, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░██████░ - 01111110
/// ░██░░░░░ - 01100000
/// ░█████░░ - 01111100
/// ░██░░░░░ - 01100000
/// ░██░░░░░ - 01100000
/// ░██░░░░░ - 01100000
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_F: [u8; 8] = [0x00, 0b01111110, 0b01100000, 0b01111100, 0b01100000, 0b01100000, 0b01100000, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░████░░ - 00111100
/// ░██░░██░ - 01100110
/// ░██░░░░░ - 01100000
/// ░██░███░ - 01101110
/// ░██░░██░ - 01100110
/// ░░████░░ - 00111100
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_G: [u8; 8] = [0x00, 0b00111100, 0b01100110, 0b01100000, 0b01101110, 0b01100110, 0b00111100, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░██████░ - 01111110
/// ░██████░ - 01111110
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_H: [u8; 8] = [0x00, 0b01100110, 0b01100110, 0b01111110, 0b01111110, 0b01100110, 0b01100110, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░██████░ - 01111110
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░██████░ - 01111110
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_I: [u8; 8] = [0x00, 0b01111110, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b01111110, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░██████░ - 01111110
/// ░░░░░██░ - 00000110
/// ░░░░░██░ - 00000110
/// ░░░░░██░ - 00000110
/// ░██░░██░ - 01100110
/// ░░████░░ - 00111100
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_J: [u8; 8] = [0x00, 0b01111110, 0b00000110, 0b00000110, 0b00000110, 0b01100110, 0b00111100, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░██░░██░ - 01100110
/// ░██░██░░ - 01101100
/// ░████░░░ - 01111000
/// ░██░██░░ - 01101100
/// ░██░░██░ - 01100110
/// ░██░░░██ - 01100011
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_K: [u8; 8] = [0x00, 0b01100110, 0b01101100, 0b01111000, 0b01101100, 0b01100110, 0b01100011, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░██░░░░░ - 01100000
/// ░██░░░░░ - 01100000
/// ░██░░░░░ - 01100000
/// ░██░░░░░ - 01100000
/// ░██░░░░░ - 01100000
/// ░██████░ - 01111110
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_L: [u8; 8] = [0x00, 0b01100000, 0b01100000, 0b01100000, 0b01100000, 0b01100000, 0b01111110, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░█░░░░█░ - 01000010
/// ░██░░██░ - 01100110
/// ░█░██░█░ - 01011010
/// ░█░░░░█░ - 01000010
/// ░█░░░░█░ - 01000010
/// ░█░░░░█░ - 01000010
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_M: [u8; 8] = [0x00, 0b01000010, 0b01100110, 0b01011010, 0b01000010, 0b01000010, 0b01000010, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░█░░░░█░ - 01000010
/// ░██░░░█░ - 01100010
/// ░█░██░█░ - 01011010
/// ░█░░░██░ - 01000110
/// ░█░░░░█░ - 01000010
/// ░█░░░░█░ - 01000010
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_N: [u8; 8] = [0x00, 0b01000010, 0b01100010, 0b01011010, 0b01000110, 0b01000010, 0b01000010, 0x00];

/// ```text
/// ░░░██░░░ - 00011000
/// ░██░░██░ - 01100110
/// ██░░░░██ - 11000011
/// ██░░░░██ - 11000011
/// ██░░░░██ - 11000011
/// ░██░░██░ - 01100110
/// ░░░██░░░ - 00011000
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_O: [u8; 8] = [0b00011000, 0b01100110, 0b11000011, 0b11000011, 0b11000011, 0b01100110, 0b00011000, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░█████░░ - 01111100
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░█████░░ - 01111100
/// ░██░░░░░ - 01100000
/// ░██░░░░░ - 01100000
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_P: [u8; 8] = [0x00, 0b01111100, 0b01100110, 0b01100110, 0b01111100, 0b01100000, 0b01100000, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░████░░ - 00111100
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░░████░░ - 00111100
/// ░░░░████ - 00001111
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_Q: [u8; 8] = [0x00, 0b00111100, 0b01100110, 0b01100110, 0b01100110, 0b00111100, 0b00001111, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░██████░ - 01111110
/// ░██░░██░ - 01100110
/// ░██░██░░ - 01101100
/// ░████░░░ - 01111000
/// ░██░██░░ - 01101100
/// ░██░░██░ - 01100110
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_R: [u8; 8] = [0x00, 0b01111110, 0b01100110, 0b01101100, 0b01111000, 0b01101100, 0b01100110, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░████░░ - 00111100
/// ░██░░██░ - 01100110
/// ░░██░░░░ - 00110000
/// ░░░███░░ - 00011100
/// ░██░░██░ - 01100110
/// ░░████░░ - 00111100
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_S: [u8; 8] = [0x00, 0b00111100, 0b01100110, 0b00110000, 0b00011100, 0b01100110, 0b00111100, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░██████░ - 01111110
/// ░██████░ - 01111110
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_T: [u8; 8] = [0x00, 0b01111110, 0b01111110, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░░████░░ - 00111100
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_U: [u8; 8] = [0x00, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b00111100, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░░████░░ - 00111100
/// ░░░██░░░ - 00011000
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_V: [u8; 8] = [0x00, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b00111100, 0b00011000, 0x00];

/// ```text
/// ██░░░██░ - 11000110
/// ██░░░██░ - 11000110
/// ██░░░██░ - 11000110
/// ██░█░██░ - 11010110
/// ███████░ - 11111110
/// ░██░██░░ - 01101100
/// ░░█░█░░░ - 00101000
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_W: [u8; 8] = [0b11000110, 0b11000110, 0b11000110, 0b11010110, 0b11111110, 0b01101100, 0b00101000, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ██░░░██░ - 11000110
/// ░██░██░░ - 01101100
/// ░░░█░░░░ - 00010000
/// ░██░██░░ - 01101100
/// ██░░░██░ - 11000110
/// ██░░░██░ - 11000110
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_X: [u8; 8] = [0x00, 0b11000110, 0b01101100, 0b00010000, 0b01101100, 0b11000110, 0b11000110, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░██░░██░ - 01100110
/// ░░████░░ - 00111100
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_Y: [u8; 8] = [0x00, 0b01100110, 0b01100110, 0b01100110, 0b00111100, 0b00011000, 0b00011000, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░██████░ - 01111110
/// ░░░░██░░ - 00001100
/// ░░░██░░░ - 00011000
/// ░░██░░░░ - 00110000
/// ░██░░░░░ - 01100000
/// ░██████░ - 01111110
/// ░░░░░░░░ - 00000000
/// ```
pub const UPPER_Z: [u8; 8] = [0x00, 0b01111110, 0b00001100, 0b00011000, 0b00110000, 0b01100000, 0b01111110, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░████░░ - 00111100
/// ░░██░░░░ - 00110000
/// ░░██░░░░ - 00110000
/// ░░██░░░░ - 00110000
/// ░░██░░░░ - 00110000
/// ░░████░░ - 00111100
/// ░░░░░░░░ - 00000000
/// ```
pub const BRACKET_OPEN: [u8; 8] = [0x00, 0b00111100, 0b00110000, 0b00110000, 0b00110000, 0b00110000, 0b00111100, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░██░░░░░ - 01100000
/// ░░██░░░░ - 00110000
/// ░░░██░░░ - 00011000
/// ░░░░██░░ - 00001100
/// ░░░░░██░ - 00000110
/// ░░░░░░██ - 00000011
/// ░░░░░░░░ - 00000000
/// ```
pub const BACKSLASH: [u8; 8] = [0x00, 0b01100000, 0b00110000, 0b00011000, 0b00001100, 0b00000110, 0b00000011, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░░████░ - 00011110
/// ░░░░░██░ - 00000110
/// ░░░░░██░ - 00000110
/// ░░░░░██░ - 00000110
/// ░░░░░██░ - 00000110
/// ░░░████░ - 00011110
/// ░░░░░░░░ - 00000000
/// ```
pub const BRACKET_CLOSE: [u8; 8] = [0x00, 0b00011110, 0b00000110, 0b00000110, 0b00000110, 0b00000110, 0b00011110, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░░███░░ - 00011100
/// ░░██░██░ - 00110110
/// ░██░░░██ - 01100011
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ```
pub const CARET: [u8; 8] = [0x00, 0b00011100, 0b00110110, 0b01100011, 0x00, 0x00, 0x00, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░██████░ - 01111110
/// ```
pub const UNDERSCORE: [u8; 8] = [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e];

/// ```text
/// ░██░░░░░ - 01100000
/// ░░██░░░░ - 00110000
/// ░░░██░░░ - 00011000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ```
pub const GRAVE_ACCENT: [u8; 8] = [0x00, 0b01100000, 0b00110000, 0b00011000, 0x00, 0x00, 0x00, 0x00];

/// ```text
/// ░░░███░░ - 00011100
/// ░░██░░░░ - 00110000
/// ░░██░░░░ - 00110000
/// ███░░░░░ - 11100000
/// ░░██░░░░ - 00110000
/// ░░██░░░░ - 00110000
/// ░░░███░░ - 00011100
/// ░░░░░░░░ - 00000000
/// ```
pub const CURLY_BRACE_OPEN: [u8; 8] = [0b00011100, 0b00110000, 0b00110000, 0b11100000, 0b00110000, 0b00110000, 0b00011100, 0x00];

/// ```text
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ░░░██░░░ - 00011000
/// ```
pub const VERTICAL_BAR: [u8; 8] = [0b00011000; 8];

/// ```text
/// ░░███░░░ - 00111000
/// ░░░░██░░ - 00001100
/// ░░░░██░░ - 00001100
/// ░░░░░███ - 00000111
/// ░░░░██░░ - 00001100
/// ░░░░██░░ - 00001100
/// ░░███░░░ - 00111000
/// ░░░░░░░░ - 00000000
/// ```
pub const CURLY_BRACE_CLOSE: [u8; 8] = [0b00111000, 0b00001100, 0b00001100, 0b00000111, 0b00001100, 0b00001100, 0b00111000, 0x00];

/// ```text
/// ░░░░░░░░ - 00000000
/// ░███░██░ - 01110110
/// ██░███░░ - 11011100
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ░░░░░░░░ - 00000000
/// ```
pub const TILDE: [u8; 8] = [0x00, 0b01110110, 0b11011100, 0x00, 0x00, 0x00, 0x00, 0x00];

pub struct Font([[u8; 8]; 95]);

impl Index<u8> for Font {
    type Output = [u8; 8];

    fn index(&self, idx: u8) -> &Self::Output {
        &self.0[(idx - 32) as usize]
    }
}

/// An array of all the font descriptions of printable ascii characters
///
/// The array at index i is the representation of the character with ascii code i - 32
pub const FONT: Font = Font([
    // Space
    EMPTY,
    EXCLAMATION_MARK,
    QUOTATION_MARK,
    HASH_SIGN,
    DOLLAR_SIGN,
    PERCENT_SIGN,
    AMPERSAND,
    APOSTROPHE,
    OPEN_PARENTHESES,
    CLOSE_PARENTHESES,
    ASTERISK,
    PLUS_SIGN,
    COMMA,
    HYPHEN,
    DOT,
    SLASH,
    ZERO,
    ONE,
    TWO,
    THREE,
    FOUR,
    FIVE,
    SIX,
    SEVEN,
    EIGHT,
    NINE,
    COLON,
    SEMI_COLON,
    LESS_THAN,
    EQUALS,
    GREATER_THAN,
    QUESTION_MARK,
    AT_SIGN,
    UPPER_A,
    UPPER_B,
    UPPER_C,
    UPPER_D,
    UPPER_E,
    UPPER_F,
    UPPER_G,
    UPPER_H,
    UPPER_I,
    UPPER_J,
    UPPER_K,
    UPPER_L,
    UPPER_M,
    UPPER_N,
    UPPER_O,
    UPPER_P,
    UPPER_Q,
    UPPER_R,
    UPPER_S,
    UPPER_T,
    UPPER_U,
    UPPER_V,
    UPPER_W,
    UPPER_X,
    UPPER_Y,
    UPPER_Z,
    BRACKET_OPEN,
    BACKSLASH,
    BRACKET_CLOSE,
    CARET,
    UNDERSCORE,
    GRAVE_ACCENT,
    UPPER_A,
    UPPER_B,
    UPPER_C,
    UPPER_D,
    UPPER_E,
    UPPER_F,
    UPPER_G,
    UPPER_H,
    UPPER_I,
    UPPER_J,
    UPPER_K,
    UPPER_L,
    UPPER_M,
    UPPER_N,
    UPPER_O,
    UPPER_P,
    UPPER_Q,
    UPPER_R,
    UPPER_S,
    UPPER_T,
    UPPER_U,
    UPPER_V,
    UPPER_W,
    UPPER_X,
    UPPER_Y,
    UPPER_Z,
    CURLY_BRACE_OPEN,
    VERTICAL_BAR,
    CURLY_BRACE_CLOSE,
    TILDE
]);
